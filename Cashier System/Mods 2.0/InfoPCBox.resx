<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        aoNqg2qDaoNqg2qDaoNqg2/8X//Z
</value>
  </data>
</root>